\begin{algorithm*}[t]
   \caption{Operations of the Generic CF Algorithm}\label{alg:general_op-2}  
\algtechrep
   \begin{algorithmic}[1]
 
   \algrestore{general}
    
   \begin{multicols}{3}
   {\size 

  		\Part{State of node $n$}{
			\State $\ms{node}$ a record with fields: 
			\State \T $\ms{k} \in  \mathbb{N}$, the node key
			\State \T $\ms{v}$, the node's value, a value of 
			\State \T\T $\bot$ indicates the nodes is
			\State \T\T logically deleted 
			\State \T $\ms{rem} \in \{\lit{true},\lit{false}\}$,indicate 
			\State \T\T whether physically deleted,
			\State \T\T initially $\lit{false}$
			\State \T $\ms{lock}$, used to lock the node
   		}\EndPart

		\Statex


		\Part{$\act{contains}(k)_p$}{
			\State $\ms{node} \gets \bot$
			\While{$\lit{true}$}
				\State $\ms{node} \gets \lit{get\_next}(\ms{node}, \ms{k})$
				\If{$\lit{validate}(\ms{node}, \ms{k})$}
					\State $break$
				\EndIf
			\EndWhile
			\State $\ms{result} \gets \lit{false}$
			\If{$\ms{node.k = k}$} \label{sline:con-eq1}
				\If{$\ms{node.v \neq} \bot$} \label{sline:con-eq2}
					\State $\ms{result} \gets \lit{true}$
				\EndIf
			\EndIf
			\Return $\ms{result}$ \EndReturn
   		}\EndPart

		\newpage

		\Part{$\act{insert}(k,v)_p$}{

			\State $\ms{node} \gets \bot$
			\While{$\lit{true}$}
				\State $\ms{node} \gets \lit{get\_next}(\ms{node}, \ms{k})$
				\State $\lit{lock}(\ms{node})$ \label{sline:ins-lock}
				\If{$\lit{validate}(\ms{node}, \ms{k})$} \label{sline:ins-val}
					\State $break$
				\EndIf
				\State $\lit{unlock}(\ms{node})$
			\EndWhile
			\State $\ms{result} \gets \lit{false}$
			\If{$\ms{node.k = k}$} 
				\If{$\ms{node.v = \bot}$} \label{sline:ins-check}
					\State $\ms{node.v} \gets \lit{v}$ \label{sline:ins-mod}
					\State $\ms{result} \gets \lit{true}$
				\EndIf
			\Else{}
				\State $\lit{add\_node}(\ms{node}, \ms{k})$ \label{sline:ins-addcall}
				\State $\ms{result} \gets \lit{true}$
			\EndIf
			\State $\lit{unlock}(\ms{node})$
			\Return $\ms{result}$ \EndReturn
   		}\EndPart

		\newpage

		\Part{$\act{delete}(k)_p$}{
			\State $\ms{node} \gets \bot$
			\While{$\lit{true}$}
				\State $\ms{node} \gets \lit{get\_next}(\ms{node}, \ms{k})$
				\State $\lit{lock}(\ms{node})$ \label{sline:del-lock}
				\If{$\lit{validate}(\ms{node}, \ms{k})$}
					\State $break$
				\EndIf
				\State $\lit{unlock}(\ms{node})$
			\EndWhile
			\State $\ms{result} \gets \lit{false}$
			\If{$\ms{node.k = k}$}
				\If{$\ms{node.v \neq \bot}$}
					\State $\ms{node.v} \gets \bot$ \label{sline:del-mod}
					\State $\ms{result} \gets \lit{true}$
				\EndIf
			\EndIf
			\State $\lit{unlock}(\ms{node})$
			\Return $\ms{result}$ \EndReturn
   		}\EndPart

	}
    \end{multicols}
    
    
  \end{algorithmic}
\algtechrepend
\end{algorithm*}
